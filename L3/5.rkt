#lang scheme
(define div quotient)
(define mod remainder)
(define (kol1 a)
  (if (< a 10) 1 (+ 1 (kol1 (div a 10) ) ) ) )
(define (kol2 a)
  (define (g b i)
    (if (= b 0) (- i 1) (g (div b 10) (+ 1 i) ) ) )
  (g a 1) )
(define (des n)
  (define (g a i)
  (if (= i n) a (g (* a 10) (+ 1 i) ) ) )
  (g 1 0) )
(define (ed n)
  (define (g a i)
       (if (= i n) a (g (+ 1 (* a 10) ) (+ 1 i) ) ) )
 (if (= n 0) 0 (g 1 1) ) )
(define (pos k)
  (define (g a i)
    (if (> a k) (- i 2) (g (- (* i (kol1 i) ) (* 10 (ed (- (kol1 i) 1) ) ) ) (+ i 1) ) ) )
  (g 0 0) )
(define (f i)
  (define k (pos i) )
  (define l (kol1 k) )
  (define n (- (* k l ) (* 10 (ed (- l 1) ) ) ) )
  (mod (div k (des (- l (+ (- i n) 1) ) ) ) 10) )